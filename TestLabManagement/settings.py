"""
Django settings for TestLabManagement project.

Generated by 'django-admin startproject' using Django 1.11.20.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))  # 项目的根目录即TestLabManagement所在的
sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))  # apps被mark为sources root，所以在pycharm中可以运行服务器起来，
                                                    # 这里一定要加这句：把 apps 文件夹 加入到python的搜索目录之下，否则在cmd窗口就拉不起来server, python manage.py runserver
sys.path.insert(0, os.path.join(BASE_DIR, 'extra_apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'hq55_z9d2xslac99@9^!mfkpwi8pwgl((!_xjj6g3xk+8r99!5'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False   #True的时候 404页面不起作用 生产环境必须false

ALLOWED_HOSTS = ['*']   #DEBUG = False的时候 是生产环境 这必须配置* 即允许所有客户端来访问


# Application definition
AUTHENTICATION_BACKENDS = (
    'users.views.CustomBackend',
)

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users',
    'equipments',
    'organization',
    'operation',
    'xadmin',
    'crispy_forms',
    'captcha',          # 通过它来做migration 生成存储图片路径地址的表
    'pure_pagination',  # 实现HTML页面分页功能
    'background_task',
    'DjangoUeditor',


]

AUTH_USER_MODEL = 'users.UserProfile'   #替换django自己的auth_user表

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'TestLabManagement.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # 'django.core.context_processors.media',
                'django.template.context_processors.media'
                # 1.11版本用这个,有这个MEDIA_URL才会注册到HTML页面来，否则在HTML中无法取到MEDIA_URL（org-list.html）
            ],
        },
    },
]

WSGI_APPLICATION = 'TestLabManagement.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'testlabmanagement',
        'USER': 'root',
        'PASSWORD': 'root',
        # 'HOST': '127.0.0.1',
        'HOST': '39.100.99.20',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-hans'      # 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

# DATETIME_FORMAT = 'Y-m-d H:i:s'

USE_TZ = False    # 若是True 在数据库存储过程中就会用UTC（国际时间）的时间，False那就用本地时间了


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
# STATICFILES_DIRS = ( #debug=True的时候 自动到这里设置的目录去取，而False（生产环境）的时候不会到这里了（不代管静态文件）
#     os.path.join(BASE_DIR, 'static'),   # 将BASE_DIR和static目录连起来
# )


# 发送邮件配置
EMAIL_HOST = 'smtp.qq.com'
EMAIL_PORT = 465  #25windows     465阿里云centos
EMAIL_HOST_USER = '419099632@qq.com'
EMAIL_HOST_PASSWORD = 'nzombzutkdsycacc'
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True   # 阿里云centos 时开启
EMAIL_FROM = '419099632@qq.com'


# 资源文件路径配置
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# # 静态文件路径配置 #debug=false用这里  nginx要用这的配置  执行collectstatic之前配置这
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

BACKGROUND_TASK_RUN_ASYNC = True
